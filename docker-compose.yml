version: "3.8"

services:
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fena_task
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  backend:
    build: ./backend
    container_name: backend_service
    restart: always
    depends_on:
      - db
      - kafka
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: password
      DB_NAME: fena_task
      KAFKA_BROKER: kafka:9092
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    command: yarn start

  frontend:
    build: ./frontend
    container_name: frontend_service
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app

volumes:
  postgres_data:
